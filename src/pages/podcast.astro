---
import BaseLayout from "../layouts/BaseLayout.astro";
import { client, urlFor } from "../lib/sanity";

const pageTitle = "Multimedia Articles";

const podcastEpisodes = await client.fetch(`
  *[_type == "podcastEpisode"] | order(episodeNumber desc) {
    _id,
    title,
    slug,
    episodeNumber,
    publishedAt,
    description,
    coverArt,
    audioFile{
      asset->{
        _id,
        url
      }
    },
    videoFile{
      asset->{
        _id,
        url
      }
    },
    duration,
    guest,
    tags,
    radioSettings
  }
`);
---

<BaseLayout pageTitle={pageTitle}>
  <div class="podcast-container">
    <header class="podcast-header">
      <h1>Multimedia Articles</h1>
      <p>Welcome! Thanks for checking out my multimedia articles. It's a podcast, an article, and a radio show all in one! Feel free to choose your level of interaction with this page.</p>
    </header>
    
    {podcastEpisodes.length === 0 ? (
      <p class="no-episodes">No episodes yet. Check back soon for the first episode!</p>
    ) : (
      <div class="episodes-grid">
        {podcastEpisodes.map((episode) => (
          <article class="episode-card">
            {episode.coverArt && (
              <img 
                src={urlFor(episode.coverArt).width(300).height(300).url()} 
                alt={`Cover art for ${episode.title}`}
                class="episode-cover"
              />
            )}
            <div class="episode-content">
              <div class="episode-header">
                <span class="episode-number">Episode {episode.episodeNumber}</span>
                <h2 class="episode-title">{episode.title}</h2>
              </div>
              
              {episode.description && (
                <p class="episode-description">{episode.description}</p>
              )}
              
              <div class="episode-meta">
                {episode.duration && (
                  <span class="duration">‚è±Ô∏è {episode.duration}</span>
                )}
                {episode.guest?.name && (
                  <span class="guest">üé§ with {episode.guest.name}</span>
                )}
                <time class="publish-date" datetime={episode.publishedAt}>
                  {new Date(episode.publishedAt).toLocaleDateString()}
                </time>
              </div>
              
              {episode.tags && episode.tags.length > 0 && (
                <div class="episode-tags">
                  {episode.tags.map((tag) => (
                    <span class="tag">{tag}</span>
                  ))}
                </div>
              )}
              
              <div class="episode-actions">
                <a href={`/podcast/${episode.slug.current}`} class="listen-btn">
                  üéß Listen Now
                </a>
              </div>
            </div>
          </article>
        ))}
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .podcast-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .podcast-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .podcast-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .podcast-header p {
    color: #666;
    font-size: 1.1rem;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .no-episodes {
    text-align: center;
    color: #666;
    font-size: 1.1rem;
    padding: 3rem;
  }
  
  .episodes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }
  
  .episode-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .episode-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 15px rgba(0,0,0,0.15);
  }
  
  .episode-cover {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }
  
  .episode-content {
    padding: 1.5rem;
  }
  
  .episode-header {
    margin-bottom: 1rem;
  }
  
  .episode-number {
    background: #007acc;
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: bold;
  }
  
  .episode-title {
    margin: 0.5rem 0 0 0;
    font-size: 1.3rem;
    line-height: 1.3;
  }
  
  .episode-description {
    color: #666;
    line-height: 1.5;
    margin-bottom: 1rem;
  }
  
  .episode-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.9rem;
    color: #666;
  }
  
  .episode-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .tag {
    background: #f0f0f0;
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.8rem;
    color: #666;
  }
  
  .episode-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
  
  .listen-btn {
    background: #007acc;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: bold;
    transition: background 0.3s ease;
  }
  
  .listen-btn:hover {
    background: #005a9e;
  }
  
  @media (max-width: 768px) {
    .episodes-grid {
      grid-template-columns: 1fr;
    }
    
    .episode-actions {
      flex-direction: column;
      align-items: stretch;
    }
    
    .listen-btn {
      text-align: center;
    }
  }
</style>

