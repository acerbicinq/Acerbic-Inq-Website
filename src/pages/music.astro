---
import BaseLayout from "../layouts/BaseLayout.astro";
import { client, urlFor } from "../lib/sanity";
import SettingsPanel from "../components/SettingsPanel.jsx";
import ToneAudioPlayer from "../components/ToneAudioPlayer.jsx";

const pageTitle = "Music";

const musicPosts = await client.fetch(`
  *[_type == "musicPost"] | order(publishedAt desc) {
    _id,
    title,
    slug,
    publishedAt,
    excerpt,
    coverArt,
    releaseType,
    tracks[]{
      trackNumber,
      trackTitle,
      audioFile{
        asset->{
          _id,
          url
        }
      },
      duration,
      lyrics,
      trackStreamingLinks
    },
    streamingLinks,
    credits
  }
`);
---

<BaseLayout pageTitle={pageTitle}>
  <div class="music-container">
    <h1>My Music</h1>
    <p>Welcome to my musical journey. Here you'll find my original songs, albums, and creative works.</p>
    
    {musicPosts.length === 0 ? (
      <p>No music posts yet. Check back soon!</p>
    ) : (
      <div class="music-grid">
        {musicPosts.map((post) => (
          <article class="music-post">
            {post.coverArt && (
              <img 
                src={urlFor(post.coverArt).width(400).height(400).url()} 
                alt={`Cover art for ${post.title}`}
                class="cover-art"
              />
            )}
            <div class="post-content">
              <h2>{post.title}</h2>
              {post.releaseType && (
                <span class="release-type">{post.releaseType.toUpperCase()}</span>
              )}
              {post.excerpt && <p class="excerpt">{post.excerpt}</p>}
              
              {post.tracks && post.tracks.length > 0 && (
                <div class="tracks-preview">
                  {post.tracks.slice(0, 1).map((track, index) => (
                    <ToneAudioPlayer 
                      key={index}
                      src={track.audioFile?.asset?.url} 
                      preview={true}
                      className="audio-preview-container"
                      client:load
                    >
                      <div class="play-overlay">
                        <span class="play-icon">â–¶</span>
                        <span class="track-info">
                          {post.tracks.length > 1 ? `${track.trackTitle} (${post.tracks.length} tracks)` : track.trackTitle}
                        </span>
                      </div>
                    </ToneAudioPlayer>
                  ))}
                </div>
              )}
              
              {post.streamingLinks && post.streamingLinks.length > 0 && (
                <div class="streaming-links">
                  <h3>Listen on:</h3>
                  <ul>
                    {post.streamingLinks.map((link) => (
                      <li>
                        <a href={link.url} target="_blank" rel="noopener noreferrer">
                          {link.platform.charAt(0).toUpperCase() + link.platform.slice(1).replace('-', ' ')}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
              
              <a href={`/music/${post.slug.current}`} class="read-more">
                Listen to This
              </a>
            </div>
          </article>
        ))}
      </div>
    )}
  </div>
  
  <!-- Add floating settings panel -->
  <SettingsPanel client:load />
</BaseLayout>

<style>
  .music-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .music-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
    gap: 2.5rem;
    margin-top: 2rem;
  }
  
  .music-post {
    border: 1px solid var(--color-sage);
    border-radius: 12px;
    overflow: hidden;
    background: linear-gradient(135deg, var(--color-blush), var(--color-sage));
    box-shadow: 0 8px 24px rgba(0,0,0,0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .music-post:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 32px rgba(0,0,0,0.15);
  }
  
  .cover-art {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }
  
  .post-content {
    padding: 2rem;
    background: rgba(255, 255, 255, 0.9);
  }
  
  .release-type {
    background: var(--color-plum);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .excerpt {
    color: #666;
    margin: 1rem 0;
    line-height: 1.5;
  }
  
  .audio-preview-container {
    position: relative;
    height: 60px;
    margin: 1rem 0;
    background: #f0f0f0;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .audio-preview-container:hover {
    background: #e0e0e0;
    transform: scale(1.02);
  }
  
  .audio-preview {
    width: 100%;
    height: 100%;
    opacity: 0;
    position: absolute;
  }
  
  .play-overlay {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 1;
    gap: 0.5rem;
  }
  
  .play-icon {
    font-size: 1.5rem;
    color: #007acc;
    transition: transform 0.3s ease;
  }
  
  .track-info {
    color: #666;
    font-size: 0.9rem;
    text-align: center;
  }
  
  .audio-preview-container:hover .play-icon {
    transform: scale(1.2);
  }
  
  .music-post:hover .audio-preview-container {
    background: #007acc;
  }
  
  .music-post:hover .play-icon {
    color: white;
  }
  
  .streaming-links {
    margin: 1rem 0;
  }
  
  .streaming-links h3 {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }
  
  .streaming-links ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .streaming-links li a {
    background: #f0f0f0;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    text-decoration: none;
    color: #333;
    font-size: 0.9rem;
  }
  
  .streaming-links li a:hover {
    background: #e0e0e0;
  }
  
  .read-more {
    display: inline-block;
    background: var(--color-teal);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 25px;
    text-decoration: none;
    margin-top: 1.5rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
  }
  
  .read-more:hover {
    background: var(--color-charcoal);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
  }
</style>

